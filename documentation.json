{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-27e872b0af0680ed20a3dbf586b900e4",
            "file": "projects/tagme-components-showcase/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'tagme-components-showcase'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tagme-components-showcase';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".component {\n\tdisplay: block;\n\tmargin-bottom: 10px;\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b3935643b1e142ba802b55b102b480e9-1",
            "file": "projects/tagme-components/src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tg-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customStyles",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "small",
                    "defaultValue": "false",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "text",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'main'",
                    "line": 24,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEmitter",
                    "defaultValue": "new EventEmitter()",
                    "line": 27,
                    "type": "EventEmitter<null>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emitClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n\tselector: 'tg-button',\n\ttemplateUrl: './button.component.html',\n\tstyleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n\t// Injects a style in the property style\n\t@Input() customStyles: string;\n\t// Disables the button\n\t@Input() disabled: boolean = false;\n\t// Decreases the height of the button\n\t@Input() small: boolean = false;\n\t// Sets the text of the button\n\t@Input() text: string;\n\t// Chooses the type. It can be:\n\t// main\n\t// success\n\t// outline-main\n\t// outline-success\n\t// white\n\t// black\n\t@Input() type: string = 'main';\n\n\t// Emitter of the click\n\t@Output() clickEmitter: EventEmitter<null> = new EventEmitter();\n\n\t// Emits the action of click\n\tpublic emitClick(): void {\n\t\tif (!this.disabled) {\n\t\t\tthis.clickEmitter.emit(null);\n\t\t}\n\t}\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../global.scss';\n\n.button {\n\tborder: none;\n\tborder-radius: 3px;\n\tfont: $main-font-2x-regular;\n\tpadding: 14px 0;\n\twidth: 100%;\n\n\t&--main {\n\t\tbackground-color: $main-orange;\n\t\tcolor: $white;\n\n\t\t&--disabled {\n\t\t\tbackground-color: $medium-orange;\n\t\t\tcursor: not-allowed;\n\t\t}\n\t}\n\n\t&--success {\n\t\tbackground-color: $green;\n\t\tcolor: $white;\n\n\t\t&--disabled {\n\t\t\tbackground-color: $medium-green;\n\t\t\tcursor: not-allowed;\n\t\t}\n\t}\n\n\t&--outline-main {\n\t\tbackground-color: transparent;\n\t\tborder: 2px solid $main-orange;\n\t\tbox-sizing: border-box;\n\t\tcolor: $main-orange;\n\n\t\t&--disabled {\n\t\t\tborder-color: $medium-orange;\n\t\t\tcolor: $medium-orange;\n\t\t\tcursor: not-allowed;\n\t\t}\n\t}\n\n\t&--outline-success {\n\t\tbackground-color: transparent;\n\t\tborder: 2px solid $green;\n\t\tbox-sizing: border-box;\n\t\tcolor: $green;\n\n\t\t&--disabled {\n\t\t\tborder-color: $medium-green;\n\t\t\tcolor: $medium-green;\n\t\t\tcursor: not-allowed;\n\t\t}\n\t}\n\n\t&--white {\n\t\tbackground-color: $white;\n\t\tborder: 1px solid $medium-gray;\n\t\tbox-sizing: border-box;\n\t\tcolor: $black;\n\n\t\t&--disabled {\n\t\t\tborder-color: $light-gray;\n\t\t\tcolor: $gray;\n\t\t\tcursor: not-allowed;\n\t\t}\n\t}\n\n\t&--black {\n\t\tbackground-color: $black;\n\t\tcolor: $white;\n\n\t\t&--disabled {\n\t\t\tbackground-color: $medium-gray;\n\t\t\tcolor: $white;\n\t\t}\n\t}\n\n\t&--small {\n\t\tpadding: 6px 0;\n\t}\n}",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button\n\tclass=\"button\"\n\t(click)=\"emitClick()\"\n\t[ngClass]=\"{\n\t\t'button--main': type === 'main',\n\t\t'button--main--disabled': type === 'main' && disabled,\n\t\t'button--success': type === 'success',\n\t\t'button--success--disabled': type === 'success' && disabled,\n\t\t'button--outline-main': type === 'outline-main',\n\t\t'button--outline-main--disabled': type === 'outline-main' && disabled,\n\t\t'button--outline-success': type === 'outline-success',\n\t\t'button--outline-success--disabled': type === 'outline-success' && disabled,\n\t\t'button--white': type === 'white',\n\t\t'button--white--disabled': type === 'white' && disabled,\n\t\t'button--black': type === 'black',\n\t\t'button--black--disabled': type === 'black' && disabled,\n\t\t'button--small': small\n\t}\"\n\t[style]=\"customStyles\"\n>\n\t{{ text }}\n</button>"
        },
        {
            "name": "ButtonsComponent",
            "id": "component-ButtonsComponent-c4dc5df1c87522d5809c9a4e19825eb8",
            "file": "projects/tagme-components-showcase/src/app/pages/buttons/buttons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-buttons",
            "styleUrls": [
                "../../app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./buttons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-buttons',\n\ttemplateUrl: './buttons.component.html',\n\tstyleUrls: ['../../app.component.scss']\n})\nexport class ButtonsComponent {}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".component {\n\tdisplay: block;\n\tmargin-bottom: 10px;\n}",
                    "styleUrl": "../../app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<tg-button \n\tclass=\"component\"\n\ttext=\"Botão padrão\"\n></tg-button>\n<tg-button \n\tclass=\"component\"\n\t[disabled]=\"true\"\n\ttext=\"Botão padrão desabilitado\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[small]=\"true\"\n\ttext=\"Botão pequeno\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\t[small]=\"true\"\n\ttext=\"Botão pequeno desabilitado\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\ttext=\"Botão de sucesso\"\n\ttype=\"success\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\ttext=\"Botão de sucesso desabilitado\"\n\ttype=\"success\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[small]=\"true\"\n\ttext=\"Botão de sucesso pequeno\"\n\ttype=\"success\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\t[small]=\"true\"\n\ttext=\"Botão de sucesso pequeno desabilitado\"\n\ttype=\"success\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\ttext=\"Botão outline\"\n\ttype=\"outline-main\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\ttext=\"Botão outline desabilitado\"\n\ttype=\"outline-main\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[small]=\"true\"\n\ttext=\"Botão outline pequeno\"\n\ttype=\"outline-main\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\t[small]=\"true\"\n\ttext=\"Botão outline pequeno desabilitado\"\n\ttype=\"outline-main\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\ttext=\"Botão outline de sucesso\"\n\ttype=\"outline-success\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\ttext=\"Botão outline de sucesso desabilitado\"\n\ttype=\"outline-success\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[small]=\"true\"\n\ttext=\"Botão outline de sucesso pequeno\"\n\ttype=\"outline-success\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\t[small]=\"true\"\n\ttext=\"Botão outline de sucesso pequeno desabilitado\"\n\ttype=\"outline-success\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\ttext=\"Botão preto\"\n\ttype=\"black\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\ttext=\"Botão preto desabilitado\"\n\ttype=\"black\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[small]=\"true\"\n\ttext=\"Botão preto pequeno\"\n\ttype=\"black\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\t[small]=\"true\"\n\ttext=\"Botão preto pequeno desabilitado\"\n\ttype=\"black\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\ttext=\"Botão branco\"\n\ttype=\"white\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\ttext=\"Botão branco desabilitado\"\n\ttype=\"white\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[small]=\"true\"\n\ttext=\"Botão branco pequeno\"\n\ttype=\"white\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\t[disabled]=\"true\"\n\t[small]=\"true\"\n\ttext=\"Botão branco pequeno desabilitado\"\n\ttype=\"white\"\n></tg-button>\n<tg-button\n\tclass=\"component\"\n\tcustomStyles=\"background-color: red; text-decoration: underline; font-style: italic\"\n\ttext=\"Botão com estilo customizado\"\n></tg-button>"
        },
        {
            "name": "CounterComponent",
            "id": "component-CounterComponent-8477364a3d49d23d43460a1564718963",
            "file": "projects/tagme-components/src/lib/counter/counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tg-counter",
            "styleUrls": [
                "./counter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./counter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "big",
                    "defaultValue": "false",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "color",
                    "defaultValue": "'#FD7F3D'",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "max",
                    "defaultValue": "99",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "line": 18,
                    "type": "number"
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "line": 20,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "valueEmitter",
                    "defaultValue": "new EventEmitter<number>()",
                    "line": 23,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "emitValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "subtract",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n\tselector: 'tg-counter',\n\ttemplateUrl: './counter.component.html',\n\tstyleUrls: ['./counter.component.scss'],\n})\nexport class CounterComponent {\n\t// Increases the height of the component\n\t@Input() big: boolean = false;\n\t// Changes the color of icons\n\t@Input() color: string = '#FD7F3D';\n\t// Turn off the component\n\t@Input() disabled: boolean = false;\n\t// Sets the max value of the counter\n\t@Input() max: number = 99;\n\t// Sets the min value of the counter\n\t@Input() min: number = 0;\n\t// Sets the default value of the counter\n\t@Input() value: number = 0;\n\n\t// Emitter of the value\n\t@Output() valueEmitter: EventEmitter<number> = new EventEmitter<number>();\n\n\t// Adds 1 to the value if it's not disabled and it's less than the max\n\tpublic add(): void {\n\t\tif (!this.disabled && this.value < this.max) {\n\t\t\tthis.value++;\n\t\t}\n\t}\n\n\t// Subtracts 1 to the value if it's not disabled and it's grater than the min\n\tpublic subtract(): void {\n\t\tif (!this.disabled && this.value > this.min) {\n\t\t\tthis.value--;\n\t\t}\n\t}\n\n\t// Emits the value\n\tpublic emitValue(): void {\n\t\tthis.valueEmitter.emit(this.value);\n\t}\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../global.scss';\n\n.counter {\n\tbackground-color: $white;\n\tborder: 1px solid $medium-gray;\n  border-radius: 3px;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\n\t&__icon {\n\t\talign-items: center;\n\t\tcursor: pointer;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tmin-width: 30px;\n\n\t\t&--disabled {\n\t\t\tcursor: not-allowed;\n\t\t}\n\t}\n\n\t&__value {\n\t\tborder-left: 1px solid $medium-gray;\n\t\tborder-right: 1px solid $medium-gray;\n\t\tflex: 1;\n\t\tfont: $main-font-2x-regular;\n\t\tpadding: 6px 0;\n\t\ttext-align: center;\n\n\t\t&--colorized {\n\t\t\tbackground-color: $light-golden;\n\t\t}\n\n\t\t&--big {\n\t\t\tpadding: 14px 0;\n\t\t}\n\t}\n}\n",
                    "styleUrl": "./counter.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"counter\">\n\t<tg-icon\n\t\tclass=\"counter__icon\"\n\t\t(click)=\"subtract(); emitValue()\"\n\t\tcolor=\"{{ disabled || value === min ? '#EAEAEA' : color }}\"\n\t\tname=\"minus_24\"\n\t\t*ngIf=\"value !== min + 1\"\n\t\t[ngClass]=\"{ 'counter__icon--disabled': value === min }\"\n\t></tg-icon>\n\t<tg-icon\n\t\tclass=\"counter__icon\"\n\t\t(click)=\"subtract(); emitValue()\"\n\t\tcolor=\"{{ disabled ? '#EAEAEA' : color }}\"\n\t\tname=\"trash_24\"\n\t\t*ngIf=\"value === min + 1\"\n\t></tg-icon>\n\t<div\n\t\tclass=\"counter__value\"\n\t\t[ngClass]=\"{ \n\t\t\t'counter__value--big': big,\n\t\t\t'counter__value--colorized':  value > min\n\t\t}\"\n\t>{{ value }}</div>\n\t<tg-icon\n\t\tclass=\"counter__icon\"\n\t\t(click)=\"add(); emitValue()\"\n\t\tcolor=\"{{ disabled || value === max ? '#EAEAEA' : color }}\"\n\t\tname=\"plus_24\"\n\t\t[ngClass]=\"{ 'counter__icon--disabled': value === max }\"\n\t></tg-icon>\n</div>\n"
        },
        {
            "name": "CountersComponent",
            "id": "component-CountersComponent-537b6805563c96f6c16c63b4cf25d4dc",
            "file": "projects/tagme-components-showcase/src/app/pages/counters/counters.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-counters",
            "styleUrls": [
                "../../app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./counters.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-counters',\n\ttemplateUrl: './counters.component.html',\n\tstyleUrls: ['../../app.component.scss']\n})\nexport class CountersComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".component {\n\tdisplay: block;\n\tmargin-bottom: 10px;\n}",
                    "styleUrl": "../../app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<tg-counter\n\tclass=\"component\"\n\tcolor=\"#FD7F3D\"\n></tg-counter>\n<tg-counter\n\t[big]=\"true\"\n\tclass=\"component\"\n\tcolor=\"#FD7F3D\"\n></tg-counter>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-880a5945d10c8b8560d600a579bc74fa",
            "file": "projects/tagme-components/src/lib/icon/icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tg-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'#30323B'",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "name",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "icons",
                    "defaultValue": "{\n\t\tplus_24: '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"11\" y=\"7\" width=\"2\" height=\"10\"/><rect x=\"7\" y=\"11\" width=\"10\" height=\"2\" /></svg>',\n\t\tminus_24: '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"7\" y=\"11\" width=\"10\" height=\"2\"/></svg>',\n\t\ttrash_24: '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"7\" y=\"11\" width=\"10\" height=\"10\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 11H17V21H7V11Z\" /></mask><g mask=\"url(#mask0)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.01699 19.7935H14.983L15.8048 12.2065H8.19521L9.01699 19.7935ZM15.1936 21H8.80637C8.30578 21 7.89602 20.5894 7.87493 20.0764L7.00364 12.0324C7.00122 12.0101 7 11.9876 7 11.9652C7 11.433 7.41823 11 7.93232 11H16.0677C16.5818 11 17 11.433 17 11.9652C17 11.9876 16.9988 12.0101 16.9964 12.0324L16.1251 20.0764C16.104 20.5894 15.6943 21 15.1936 21Z\" /></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.39995 8.8024L15.4487 7.83517L14.9456 7.13088L8.67162 7.99181L8.39995 8.8024ZM16.1581 8.86492L8.02775 9.98056C7.93167 9.99375 7.78712 10.0071 7.64411 9.9957C7.55658 9.98875 7.47997 9.97342 7.40998 9.94885C7.18612 9.87021 7.03283 9.69486 7 9.47983L7.02154 9.23109L7.61975 7.44605C7.66455 7.24379 7.84293 6.97846 8.44835 6.89538L14.8317 6.01946C14.9277 6.00627 15.0723 5.99294 15.2153 6.00429C15.3028 6.01123 15.3794 6.02657 15.4494 6.05113C15.5998 6.10395 15.7183 6.20035 15.7898 6.32313L16.8987 7.87572L16.9938 8.10845C17.0164 8.25592 17.0227 8.74626 16.1581 8.86492Z\" /><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.7095 6.7861L10.562 5.78627L12.3468 5.53273L12.4943 6.53256L14 6.31866L13.8089 5.02334C13.7128 4.37152 13.0941 3.91804 12.4299 4.01243L10.0429 4.35152C9.37864 4.44587 8.9165 5.0529 9.01266 5.70468L9.20379 7L10.7095 6.7861Z\" /></svg>'\n\t}",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "chooseIcon",
                    "args": [
                        {
                            "name": "iconName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "iconName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fillIcon",
                    "args": [
                        {
                            "name": "color",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "color",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'tg-icon',\n\ttemplateUrl: './icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IconComponent implements OnInit {\n\t// Sets the type of icon with it's name\n\t@Input() \n\tset name(iconName: string) {\n\t\tthis.chooseIcon(iconName);\n\t}\n\n\t// Sets the color of the icon\n\t@Input() color: string = '#30323B';\n\n\t// Fills the icon when it's created\n\tngOnInit(): void {\n\t\tthis.fillIcon(this.color);\n\t}\n\n\t// List of icons\n\tprivate icons = {\n\t\tplus_24: '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"11\" y=\"7\" width=\"2\" height=\"10\"/><rect x=\"7\" y=\"11\" width=\"10\" height=\"2\" /></svg>',\n\t\tminus_24: '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"7\" y=\"11\" width=\"10\" height=\"2\"/></svg>',\n\t\ttrash_24: '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"7\" y=\"11\" width=\"10\" height=\"10\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 11H17V21H7V11Z\" /></mask><g mask=\"url(#mask0)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.01699 19.7935H14.983L15.8048 12.2065H8.19521L9.01699 19.7935ZM15.1936 21H8.80637C8.30578 21 7.89602 20.5894 7.87493 20.0764L7.00364 12.0324C7.00122 12.0101 7 11.9876 7 11.9652C7 11.433 7.41823 11 7.93232 11H16.0677C16.5818 11 17 11.433 17 11.9652C17 11.9876 16.9988 12.0101 16.9964 12.0324L16.1251 20.0764C16.104 20.5894 15.6943 21 15.1936 21Z\" /></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.39995 8.8024L15.4487 7.83517L14.9456 7.13088L8.67162 7.99181L8.39995 8.8024ZM16.1581 8.86492L8.02775 9.98056C7.93167 9.99375 7.78712 10.0071 7.64411 9.9957C7.55658 9.98875 7.47997 9.97342 7.40998 9.94885C7.18612 9.87021 7.03283 9.69486 7 9.47983L7.02154 9.23109L7.61975 7.44605C7.66455 7.24379 7.84293 6.97846 8.44835 6.89538L14.8317 6.01946C14.9277 6.00627 15.0723 5.99294 15.2153 6.00429C15.3028 6.01123 15.3794 6.02657 15.4494 6.05113C15.5998 6.10395 15.7183 6.20035 15.7898 6.32313L16.8987 7.87572L16.9938 8.10845C17.0164 8.25592 17.0227 8.74626 16.1581 8.86492Z\" /><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.7095 6.7861L10.562 5.78627L12.3468 5.53273L12.4943 6.53256L14 6.31866L13.8089 5.02334C13.7128 4.37152 13.0941 3.91804 12.4299 4.01243L10.0429 4.35152C9.37864 4.44587 8.9165 5.0529 9.01266 5.70468L9.20379 7L10.7095 6.7861Z\" /></svg>'\n\t};\n\n\t// Injects the ElementRef to allow the access to the HTML element\n\tconstructor(private element: ElementRef) {}\n\n\t// Injects in the HTML element the svg icon\n\tprivate chooseIcon(iconName: string): void {\n\t\tthis.element.nativeElement.innerHTML = this.icons[iconName] || null;\n\t}\n\n\t// Fills the icon with a color\n\tprivate fillIcon(color: string): void {\n\t\tthis.element?.nativeElement?.firstChild?.childNodes.forEach(element => {\n\t\t\telement.style.fill = color;\n\t\t});\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "setSignature": {
                        "name": "name",
                        "type": "void",
                        "args": [
                            {
                                "name": "iconName",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 11,
                        "jsdoctags": [
                            {
                                "name": "iconName",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<ng-content></ng-content>"
        },
        {
            "name": "IconsComponent",
            "id": "component-IconsComponent-27f8a96253f3945f7002a4a485dd6c7c",
            "file": "projects/tagme-components-showcase/src/app/pages/icons/icons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icons",
            "styleUrls": [
                "../../app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-icons',\n\ttemplateUrl: './icons.component.html',\n\tstyleUrls: ['../../app.component.scss']\n})\nexport class IconsComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".component {\n\tdisplay: block;\n\tmargin-bottom: 10px;\n}",
                    "styleUrl": "../../app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<tg-icon\n\tclass=\"component\"\n\tname=\"plus_24\"\n></tg-icon>\n<tg-icon\n\tclass=\"component\"\n\tcolor=\"#FD7F3D\"\n\tname=\"plus_24\"\n></tg-icon>\n<tg-icon\n\tclass=\"component\"\n\tname=\"minus_24\"\n></tg-icon>\n<tg-icon\n\tclass=\"component\"\n\tcolor=\"#FD7F3D\"\n\tname=\"minus_24\"\n></tg-icon>\n<tg-icon\n\tclass=\"component\"\n\tname=\"trash_24\"\n></tg-icon>"
        },
        {
            "name": "LinkComponent",
            "id": "component-LinkComponent-7dd5ec4e12e2d8a2258bb4dee4304f3d",
            "file": "projects/tagme-components/src/lib/link/link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tg-link",
            "styleUrls": [
                "./link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./link.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customStyles",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "queryParams",
                    "line": 12,
                    "type": "literal type"
                },
                {
                    "name": "routerLink",
                    "line": 16,
                    "type": "string | any[]"
                },
                {
                    "name": "state",
                    "line": 18,
                    "type": "literal type"
                },
                {
                    "name": "text",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'default'",
                    "line": 30,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'tg-link',\n\ttemplateUrl: './link.component.html',\n\tstyleUrls: ['./link.component.scss']\n})\nexport class LinkComponent {\n\t// Injects a style in the property style\n\t@Input() customStyles: string;\n\t// (Optional) Query params of the link\n\t@Input() queryParams?: {\n\t\t[k: string]: any;\n\t};\n\t// Destination of the link\n\t@Input() routerLink: string | any[];\n\t// (Optional) State for the destination\n\t@Input() state?: {\n\t\t[k: string]: any;\n\t};\n\t// Text of the link\n\t@Input() text: string;\n\t// Type of the link. It can be:\n\t// default\n\t// default-underline\n\t// small\n\t// small-underline\n\t// button\n\t// small button\n\t@Input() type: string = 'default';\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../global.scss';\n\n.link {\n\tcolor: $main-orange;\n\ttext-decoration: none;\n\n\t&--default {\n\t\tfont: $main-font-2x-semibold;\n\n\t\t&--underline {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\n\t&--small {\n\t\tfont: $main-font-1x-semibold;\n\n\t\t&--underline {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\n\t&--button {\n\t\tborder: 1px solid $medium-gray;\n\t\tbox-sizing: border-box;\n\t\tborder-radius: 3px;\n\t\tdisplay: block;\n\t\tfont: $main-font-2x-semibold;\n\t\tpadding: 14px 0;\n\t\ttext-align: center;\n\n\t\t&--small {\n\t\t\tfont: $main-font-2x-regular;\n\t\t\tpadding: 6px 0;\n\t\t}\n\t}\n}",
                    "styleUrl": "./link.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<a\n\tclass=\"link\"\n\t[ngClass]=\"{\n\t\t'link--default': type === 'default' || type === 'default-underline',\n\t\t'link--default--underline': type === 'default-underline',\n\t\t'link--small': type === 'small' || type === 'small-underline',\n\t\t'link--small--underline': type === 'small-underline',\n\t\t'link--button': type === 'button' || type === 'small-button',\n\t\t'link--button--small': type === 'small-button'\n\t}\"\n\t[queryParams]=\"queryParams\" \n\t[routerLink]=\"routerLink\" \n\t[state]=\"state\"\n\t[style]=\"customStyles\"\n>\n\t{{ text }}\n</a>"
        },
        {
            "name": "LinksComponents",
            "id": "component-LinksComponents-7c78ed9c6d4ae12144221e314665868d",
            "file": "projects/tagme-components-showcase/src/app/pages/links/links.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-links",
            "styleUrls": [
                "../../app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./links.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-links',\n\ttemplateUrl: './links.component.html',\n\tstyleUrls: ['../../app.component.scss']\n})\nexport class LinksComponents {}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".component {\n\tdisplay: block;\n\tmargin-bottom: 10px;\n}",
                    "styleUrl": "../../app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<tg-link\n\tclass=\"component\"\n\ttext=\"Link default\"\n></tg-link>\n<tg-link\n\tclass=\"component\"\n\ttext=\"Link default underline\"\n\ttype=\"default-underline\"\n></tg-link>\n<tg-link\n\tclass=\"component\"\n\ttext=\"Link small\"\n\ttype=\"small\"\n></tg-link>\n<tg-link\n\tclass=\"component\"\n\ttext=\"Link small underline\"\n\ttype=\"small-underline\"\n></tg-link>\n<tg-link\n\tclass=\"component\"\n\ttext=\"Link button\"\n\ttype=\"button\"\n></tg-link>\n<tg-link\n\tclass=\"component\"\n\ttext=\"Link small button\"\n\ttype=\"small-button\"\n></tg-link>\n<tg-link\n\tclass=\"component\"\n\ttext=\"Custom Style\"\n\tcustomStyles=\"color: red; text-decoration: underline; text-transform: uppercase\"\n></tg-link>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-cca1a8911321fa17756ce90c90de65cc",
            "file": "stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonsComponent"
                        },
                        {
                            "name": "CountersComponent"
                        },
                        {
                            "name": "IconsComponent"
                        },
                        {
                            "name": "LinksComponents"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "CounterModule"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "LinkModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CounterModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CounterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CounterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LinkModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LinkComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LinkComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/tagme-components-showcase/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/tagme-components/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/tagme-components-showcase/src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/tagme-components-showcase/src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/tagme-components-showcase/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/tagme-components/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/tagme-components-showcase/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/tagme-components-showcase/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/tagme-components-showcase/src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/tagme-components/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/tagme-components/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/tagme-components/src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/tagme-components-showcase/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/tagme-components-showcase/src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/tagme-components-showcase/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/tagme-components-showcase/src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
                }
            ],
            "stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
                }
            ],
            "stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "projects/tagme-components-showcase/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "buttons",
                        "component": "ButtonsComponent"
                    },
                    {
                        "path": "counters",
                        "component": "CountersComponent"
                    },
                    {
                        "path": "icons",
                        "component": "IconsComponent"
                    },
                    {
                        "path": "links",
                        "component": "LinksComponents"
                    },
                    {
                        "path": "**",
                        "component": "AppComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "projects/tagme-components-showcase/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components-showcase/src/app/pages/buttons/buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components-showcase/src/app/pages/counters/counters.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CountersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components-showcase/src/app/pages/icons/icons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components-showcase/src/app/pages/links/links.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinksComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components-showcase/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components-showcase/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components-showcase/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components-showcase/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components/src/lib/counter/counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components/src/lib/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components/src/lib/link/link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/tagme-components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}